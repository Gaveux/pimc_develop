
interface
subroutine calcen(sys,interp,pot,neigh,Weight,r,V,dVdR,RawWeightTemp,dWTdr2,Tayd2veightdr2tmp1,Tayd2veightdr2tmp2,TDWeightSumDWeight,WTSumDWeightDrSqr,d2TaydR2tmp1,drdx,d2rdx2,d2rdxmdxn,d2TaydR2tmp2_mb,d2TaydR2tmp2_nb) 

  use molecule_specs
  use interpolation

  type (molsysdat), intent(in) :: sys
  type (interp_params), intent(in) :: interp
  type (pot_data_point), dimension(:), pointer :: pot
  type (neighbour_list), intent(in) :: neigh

  real(kind=8), dimension(:), intent(inout) :: Weight
  real(kind=8), dimension(:), intent(in) :: RawWeightTemp
  real(kind=8), dimension(:), intent(in) :: r
  real(kind=8), intent(out) :: V
  real(kind=8), dimension(sys%nbond), intent(out) :: dVdR
  real(kind=8), dimension(sys%nbond), intent(out) :: dWTdr2

  real(kind=8), dimension(sys%nbond), intent(out) :: Tayd2veightdr2tmp1
  real(kind=8), dimension(sys%nbond), intent(out) :: Tayd2veightdr2tmp2

  real(kind=8), dimension(sys%nbond), intent(out) :: TDWeightSumDWeight
  real(kind=8), dimension(sys%nbond), intent(out) :: WTSumDWeightDrSqr

  real(kind=8), dimension(sys%nbond), intent(out) :: d2TaydR2tmp1
  real(kind=8), dimension(sys%dimen,sys%nbond), intent(out) :: d2TaydR2tmp2_mb
  real(kind=8), dimension(sys%dimen,sys%nbond), intent(out) :: d2TaydR2tmp2_nb


  real(kind=8), dimension(sys%dimen,sys%natom,sys%nbond), intent(in) :: drdx
  real(kind=8), dimension(sys%dimen,sys%dimen,sys%nbond), intent(in) :: d2rdx2
  real(kind=8), dimension(sys%dimen,sys%dimen,sys%nbond), intent(in) :: d2rdxmdxn

  end subroutine calcen
end interface
